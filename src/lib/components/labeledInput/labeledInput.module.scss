@import '../../styles/variables/variables.module.scss';
@import '../../styles/themes/themes.module.scss';
@import '../../styles/global/reset.module.scss';

.wrapper {
  position: relative;

  input {
    -webkit-appearance: none;
    border: none;
    outline: none;
    width: 100%;
    padding: 0.9em 2em;
    border-radius: 3px;

    @include themify() {
      color: themed('fieldColor');
      background-color: themed('fieldBackground');
      border: 1px solid themed('borderColor');
      font-family: themed('primaryFont');
      font-size: themed('fieldFontSize');
      font-weight: themed('fieldFontWeight');
    }

    &[placeholder] ~ label {
      transform: translate3d(0, -1.2em, 0) scale(0.75);
    }

    &[required] ~ label::after,
    &.required ~ label::after {
      content: ' *';
      vertical-align: text-top;

      @include themify() {
        font-family: themed('primaryFont');
        color: themed('fieldColorError');
        font-size: themed('fieldFontSize');
        font-weight: themed('fieldFontWeight');
      }
    }

    &:focus {
      @include themify() {
        border-width: 2px;
      }
    }

    &:not([value='']),
    &:focus,
    &:valid:not([value='']) {
      ~ label {
        @include themify() {
          color: themed('borderColor');
        }
        background-color: $white;
        padding: 0 0.3em;
        width: auto;
        transform: translate3d(0, -1.2em, 0) scale(0.75);
      }
    }

    &:not([value='']):invalid,
    &.error {
      @include themify() {
        border-width: 2px;
        border-color: $error-color;
      }

      ~ label {
        @include themify() {
          font-family: themed('primaryFont');
          color: themed('fieldColorError');
        }
        background-color: $white;
        padding: 0 0.3em;
        width: auto;
        transform: translate3d(0, -1.2em, 0) scale(0.75);
      }
    }
  }

  input[readonly], input[readonly]:focus {
    cursor: not-allowed;
    @include themify() {
      background: themed('fieldReadOnlyBackgroundColor');
      color: themed('fieldReadOnlyColor');
      border-width: 2px;
    }
  }

  .helperMessage,
  .errorMessage {
    display: block;
    font-size: 0.6rem;
    margin: 0.7em 0 0 1.5em;

    @include themify() {
      color: themed('fieldColorError');
      font-family: themed('primaryFont');
    }
  }

  .helperMessage {
    @include themify() {
      color: themed('helperTextColor');
    }
  }

  .errorMessage {
    visibility: hidden;
    @include themify() {
      color: themed('fieldColorError');
    }

    &.active {
      visibility: visible;
    }
  }

  label {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    color: $black;
    position: absolute;
    top: 1em;
    left: 1em;
    pointer-events: none;
    right: auto;
    text-align: left;
    transform: translate3d(0, 0, 0) scale(1);
    transform-origin: left top;
    transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
    width: 100%;
    z-index: 1;
    @include themify() {
      color: themed('fieldPlaceholderColor');
      font-family: themed('primaryFont');
      font-size: themed('fieldFontSize');
      // padding: themed('inputPadding');
    }

    // i've played around with the below and i'm not sure what it's for... usually i would just delete but it looks like maybe i could be misssing something? It doesn't effect the *asterix* after the required input label so... not sure
    &.required::after {
      content: ' * ';
      vertical-align: text-top;
      @include themify() {
        font-family: themed('primaryFont');
        color: themed('fieldColorError');
        font-size: themed('fieldFontSize');
        font-weight: themed('fieldFontWeight');
      }
    }
  }
}
